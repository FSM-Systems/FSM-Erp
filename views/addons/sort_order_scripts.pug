// - This function will make dbtable sortable and take care of updating the DB with the new order
// - It will take the column name, column value and column id value automatically from the attributs of the
// - ordering (hidden) column and update the database automatically.
// The order column has to have a class=order 
script. 
	$(document).ready(function () {
		$( ".table tbody" ).sortable({
			start: function (event, ui) {
				// -  Get current index of menu item. We use this to calculate the update of the iems that we are going to take place in the order.
				var startmenupos = parseInt(ui.item.index()); // Starting position of the menu item
			},
			stop: function (event, ui) {
				// - Loop throug all items and reassign the order based on how they are now
				// - Compare to current order and if it has changed then update DB
				// - as we do not want to make too many calls to the DB
				var ordercount = 1;
				$( ".table tbody tr td" ).find("input.order").each(function () {
					// Compare curent order to order value in input box. If different update DB
					if ($(this).val() != ordercount) {
						//console.log(ordercount + ' ' + $(this).val() + ' ---- ' +$(this).attr("colidval"))
						var dbid = $(this).attr("colidval");
						var dbcolname = $(this).attr("col");
						var dbcolidname = $(this).attr("colid");
						// Update database
						$.ajax({
							type: 'POST',
							url: '/api/db/update_db_field',
							data: {
								table: $("#dbtable").val(),
								dbcol: dbcolname,
								dbcolid: dbcolidname,
								dbcolval: ordercount,
								dbcolidval: dbid,
								_csrf: $("#_csrf").val(),
							},
							success: function (data) {
								//console.log(data) // DEBUG: simple just log to console the error from database otherwise page could be too heavy 
							},
							error: function () {
								alert("THERE WAS AN ERROR UPDATING THE DB!")
							}
						})
					}
					ordercount++;							
				})
			}
		})
	})